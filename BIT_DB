-- List all the products sold in Los Angeles in February, and include how many of each were sold. 
SELECT DISTINCT product, SUM(Quantity) as Quantity_sold
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product


-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location, count(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
GROUP BY location 
HAVING count(orderID) >= 3

-- How many of each type of headphone were sold in February?
SELECT product, sum(Quantity) as quantity_sold
FROM BIT_DB.FebSales
WHERE product like '%headphone%'
GROUP BY product

-- What was the average amount spent per account in February?
SELECT sum(Quantity*price)/count(C.acctnum)
FROM BIT_DB.FebSales FS
LEFT JOIN BIT_DB.customers C
ON FS.orderID = C.order_id

-- What was the average quantity of products purchased per account in February?
SELECT sum(Quantity)/count(C.acctnum)
FROM BIT_DB.FebSales FS
LEFT JOIN BIT_DB.customers C
ON FS.orderID=C.order_id

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, sum(Quantity*price) Revenue
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY Revenue DESC LIMIT 1

-- Find the account numbers, the count of order IDs, product, quantity, price, order date, and location for all orders that were placed in February.
SELECT 
customers.acctnum, 
COUNT(FebSales.orderID) as NumberOfOrders, 
FebSales.Product, 
FebSales.Quantity, 
FebSales.price,
FebSales.orderdate, 
FebSales.location
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales ON customers.order_id = FebSales.orderID
GROUP BY
customers.acctnum, 
FebSales.Product, 
FebSales.Quantity, 
FebSales.price,
FebSales.orderdate, 
FebSales.location;

